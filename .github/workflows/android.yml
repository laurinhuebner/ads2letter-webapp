name: Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    # Leere alle problematischen Java-Optionen GLOBAL
    env:
      JAVA_TOOL_OPTIONS: ""
      _JAVA_OPTIONS: ""
      GRADLE_OPTS: ""

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Gradle Wrapper erzeugen, falls nicht im Repo
      - name: Ensure Gradle Wrapper
        shell: bash
        run: |
          set -e
          if [ ! -f ./gradlew ]; then
            echo "gradlew fehlt → lade Gradle 8.7 und erzeuge Wrapper"
            curl -sL https://services.gradle.org/distributions/gradle-8.7-bin.zip -o gradle-8.7-bin.zip
            unzip -q gradle-8.7-bin.zip
            ./gradle-8.7/bin/gradle --version
            ./gradle-8.7/bin/gradle wrapper
          fi
          chmod +x ./gradlew
          ./gradlew -v

      # gradle.properties reparieren/setzen (keine Anführungszeichen!)
      - name: Normalize gradle.properties
        shell: bash
        run: |
          set -e
          # existierende gradle.properties bereinigen
          touch gradle.properties
          # entferne fehlerhafte Zeilen mit Anführungszeichen um Xmx64m
          sed -i '/org\.gradle\.jvmargs=.*"-Xmx64m"/d' gradle.properties || true
          # setze gewünschte Properties (überschreibt ggf. mehrfach vorhandene)
          # Wichtig: KEINE Anführungszeichen um -Xmx
          grep -q "^org.gradle.jvmargs=" gradle.properties && \
            sed -i 's/^org\.gradle\.jvmargs=.*/org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8/' gradle.properties || \
            echo "org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8" >> gradle.properties

          grep -q "^android.useAndroidX=" gradle.properties && \
            sed -i 's/^android\.useAndroidX=.*/android.useAndroidX=true/' gradle.properties || \
            echo "android.useAndroidX=true" >> gradle.properties

          grep -q "^android.enableJetifier=" gradle.properties && \
            sed -i 's/^android\.enableJetifier=.*/android.enableJetifier=true/' gradle.properties || \
            echo "android.enableJetifier=true" >> gradle.properties

          echo "----- gradle.properties -----"
          cat gradle.properties
          echo "-----------------------------"

      # Optionale BASE_URL setzen (Repo → Settings → Secrets/Variables → Actions)
      - name: Prepare env
        shell: bash
        run: |
          : "${BASE_URL:=${{ vars.BASE_URL }}}"
          : "${BASE_URL:=${{ secrets.BASE_URL }}}"
          echo "BASE_URL=${BASE_URL}" >> $GITHUB_ENV

      - name: Build debug APK
        shell: bash
        run: |
          set -e
          # zur Sicherheit auch hier alles leeren
          unset JAVA_TOOL_OPTIONS _JAVA_OPTIONS
          ./gradlew clean :app:assembleDebug -PBASE_URL="${BASE_URL}" --stacktrace --info

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: |
            app/build/outputs/apk/debug/*.apk
            **/outputs/apk/debug/*.apk
          if-no-files-found: warn
