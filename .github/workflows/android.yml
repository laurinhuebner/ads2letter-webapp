name: Build Android APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Detect Android project directory
        shell: bash
        run: |
          set -e
          ANDROID_DIR=""
          # 1) Projekt im Repo-Root?
          if [[ -f "settings.gradle" || -f "settings.gradle.kts" || -f "gradlew" ]]; then
            ANDROID_DIR="."
          # 2) Klassischer Unterordner "android"?
          elif [[ -d "android" && ( -f "android/settings.gradle" || -f "android/settings.gradle.kts" || -f "android/gradlew" ) ]]; then
            ANDROID_DIR="android"
          else
            # 3) Fallback: suchen
            FILE=$(git ls-files | egrep '(^|/)(settings\.gradle(\.kts)?|app/build\.gradle(\.kts)?)$' | head -n1 || true)
            if [[ -n "$FILE" ]]; then
              ANDROID_DIR="$(dirname "$FILE")"
              # falls FILE app/build.gradle ist -> ein Verzeichnis höher (Modul)
              if [[ "$ANDROID_DIR" =~ app$ ]]; then ANDROID_DIR="$(dirname "$ANDROID_DIR")"; fi
            fi
          fi

          if [[ -z "$ANDROID_DIR" ]]; then
            echo "Konnte keinen Android-Ordner finden. Prüfe Repo-Struktur."
            exit 1
          fi

          echo "Gefundener ANDROID_DIR: $ANDROID_DIR"
          echo "ANDROID_DIR=$ANDROID_DIR" >> "$GITHUB_ENV"

      - name: Build Debug APK
        shell: bash
        run: |
          set -e
          cd "$ANDROID_DIR"

          if [[ -f "./gradlew" ]]; then
            echo "Baue mit Gradle Wrapper…"
            chmod +x ./gradlew
            ./gradlew --no-daemon assembleDebug
          else
            echo "Kein Wrapper gefunden – installiere Gradle…"
            sudo apt-get update -y
            sudo apt-get install -y gradle
            gradle --version
            gradle --no-daemon assembleDebug
          fi

          # APK suchen
          APK_PATH=$(find "$PWD" -type f -name "app-debug.apk" | head -n1 || true)
          if [[ -z "$APK_PATH" ]]; then
            echo "Keine app-debug.apk gefunden."
            exit 1
          fi
          echo "APK_PATH=$APK_PATH" >> "$GITHUB_ENV"
          echo "Gefundene APK: $APK_PATH"

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: ${{ env.APK_PATH }}     - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
