name: Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'app/**'
      - 'build.gradle'
      - 'build.gradle.kts'
      - 'settings.gradle'
      - 'settings.gradle.kts'
      - 'gradle.properties'
      - '.github/workflows/android.yml'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      # Gradle Wrapper erzeugen, falls fehlt
      - name: Generate Gradle Wrapper if missing
        if: ${{ hashFiles('gradlew') == '' }}
        uses: gradle/gradle-build-action@v3
        env:
          JAVA_TOOL_OPTIONS: ""
          _JAVA_OPTIONS: ""
          GRADLE_OPTS: ""
        with:
          gradle-version: 8.7
          arguments: wrapper

      - name: Make gradlew executable & print version
        shell: bash
        run: |
          unset JAVA_TOOL_OPTIONS _JAVA_OPTIONS
          if [ -f ./gradlew ]; then chmod +x ./gradlew; else echo "gradlew fehlt"; fi
          ./gradlew -v

      - name: Ensure gradle.properties (AndroidX + RAM)
        shell: bash
        run: |
          unset JAVA_TOOL_OPTIONS _JAVA_OPTIONS
          {
            echo "org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8"
            echo "android.useAndroidX=true"
            echo "android.enableJetifier=true"
          } >> gradle.properties
          tail -n +1 gradle.properties

      - name: Assemble Debug APK
        uses: gradle/gradle-build-action@v3
        env:
          JAVA_TOOL_OPTIONS: ""
          _JAVA_OPTIONS: ""
          GRADLE_OPTS: ""
          BASE_URL: ${{ vars.BASE_URL != '' && vars.BASE_URL || secrets.BASE_URL }}
        with:
          arguments: |
            clean :app:assembleDebug
            -PBASE_URL=${{ env.BASE_URL }}
            --stacktrace --info

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: |
            app/build/outputs/apk/debug/*.apk
            **/outputs/apk/debug/*.apk
          if-no-files-found: warn
